// Generated by CoffeeScript 2.3.2
(function() {
  var IO, admin_group, app, http, io, isFirstClick, ruler, server, user_group,
    indexOf = [].indexOf;

  http = require('http');

  IO = require('socket.io');

  app = require('../app.js');

  server = http.Server(app);

  io = IO(server);

  // help function ,justies if daka event during daka time.
  // 打卡时间规定，上午UTC时间为23:25-23:45 pm : 9:50-9:59&&10:00-10:10
  ruler = {
    am: {
      // 北京时间上午7:25-7:45
      first_half: {
        hour: 23, //utc23=7:00AM(cst)
        minutes: {
          min: 25,
          max: 45
        }
      },
      second_half: null
    },
    pm: {
      // 北京时间下午17:50 - 18:10
      first_half: {
        hour: 9, //utc9=17:00PM
        minutes: {
          min: 50,
          max: 59
        }
      },
      second_half: {
        hour: 10, //utc10=18:00PM
        minutes: {
          min: 0,
          max: 10
        }
      }
    }
  };

  isFirstClick = function(ruler) {
    var _, current, hour, i, ii, minute, ref, ref1;
    // get ruler.xx
    current = new Date;
    hour = current.getUTCHours();
    minute = current.getUTCMinutes();
// i in [am,pm]
    for (_ in ruler) {
      i = ruler[_];
// ii in [first_half,second_half]  
      for (_ in i) {
        ii = i[_];
        if (ii === null) {
          continue;
        }
        if (hour !== ii.hour) {
          continue;
        }
        if (indexOf.call((function() {
          var results = [];
          for (var j = ref = ii.minutes.min, ref1 = ii.minutes.max; ref <= ref1 ? j <= ref1 : j >= ref1; ref <= ref1 ? j++ : j--){ results.push(j); }
          return results;
        }).apply(this), minute) >= 0) {
          return true;
        }
      }
    }
    return false;
  };

  
  // admin_group's client page (route) is /admin/daka
  admin_group = io.of('/admin').on('connect', function(socket) {
    // once one admin joined,should tell user channel this change.
    user_group.send('one admin joined right now,socket number:' + socket.id);
    user_group.clients(function(err, clients) {
      // report important things:1,currently how many users,2,ids of them
      return socket.send('Current Client list:' + clients.join(','));
    });
    return socket.on('qr fetched', function() {
      // 虽然在定义时并没有user_group,不影响运行时态.
      return user_group.emit('qr ready', 'Qrcode is ready,go and scan for daka.');
    });
  });

  // user page(client):/user/daka
  user_group = io.of('/user').on('connect', function(socket) {
    // 来，看这里，试试看我们的IOSOCKET与APP模块（即EXRPRESS）通讯。
    // once one user joined,should tell admin channel this change.
    // client's infomation almost from socket.request.
    admin_group.send('one user joined right now,socket-id:' + socket.id);
    admin_group.send('user-agent is:' + socket.request.headers['user-agent']);
    admin_group.clients(function(err, admins) {
      return socket.send('Current Role Admin List:' + admins.join(','));
    });
    return socket.on('query qr', function(userid, alias) {
      // user chanel requery qrcode. server side generate a png qrcode,
      // then inform admin channel with data ,admin page will render these.
      return admin_group.clients(function(err, admins) {
        if (admins.length === 0) {
          return user_group.emit('no admin');
        } else {
          return admin_group.emit('fetch qr', {
            alias: alias,
            url: '/create-qrcode',
            timestamp: Date.now(),
            socketid: userid
          });
        }
      });
    });
  });

  io.on('connect', function(socket) {
    socket.send('hi every body.');
    socket.on('createqrcode', function(text, cb) {
      // client query a qrcode
      return cb('/create-qrcode?text=' + text);
    });
    return socket.on('disconnect', function() {
      return console.log('one user leave.');
    });
  });

  server.listen(3003, function() {
    return console.log('server running at port 3003;press Ctrl-C to terminate.');
  });

}).call(this);
