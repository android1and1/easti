// Generated by CoffeeScript 2.3.2
(function() {
  var indexOf = [].indexOf;

  $(function() {
    var counter;
    // after window.loaded,create a form -- form0
    counter = 0;
    (new_form(counter++)).insertBefore($('#total-submit'));
    
    // the first form should disable 'delete' button
    $('button.btn-danger').attr('disabled', 1);
    
    // 注册所有类型为RADIO的控件，当点击时禁用/解禁相邻的TEXT控件。
    $('#container').on('click', 'input[type=radio]', function(e) {
      var $input_entry, $input_exit;
      $input_entry = $(this).closest('.form-group').next().find('input');
      $input_exit = $input_entry.parentsUntil('form.form-horizontal').next().find('input');
      switch ($(this).val()) {
        case 'option1':
          $input_entry.removeAttr('disabled');
          return $input_exit.attr('disabled', 1);
        case 'option2':
          $input_entry.attr('disabled', 1);
          return $input_exit.removeAttr('disabled');
        case 'option3':
          $input_exit.removeAttr('disabled');
          return $input_entry.removeAttr('disabled');
      }
    });
    $('#container').on('click', 'button.more', function(e) {
      var $form;
      // create a new form
      $form = new_form(counter);
      $form.insertBefore($('#total-submit'));
      e.preventDefault();
      e.stopPropagation();
      return counter++;
    });
    $('#container').on('click', 'button.btn-danger', function(e) {
      var theform;
      theform = $(this).closest('form');
      theform.remove();
      e.preventDefault();
      return e.stopPropagation();
    });
    return $('#total-submit').on('click', function(e) {
      var arr, fd, i, item, len, mapobj, ref, xhr;
      arr = $('form').serializeArray();
      fd = new FormData;
      mapobj = {};
      for (i = 0, len = arr.length; i < len; i++) {
        item = arr[i];
        if (ref = item.name, indexOf.call(Object.keys(mapobj), ref) < 0) {
          mapobj[item.name] = [];
        }
        mapobj[item.name].push(item.value);
      }
      for (item in mapobj) {
        fd.append(item, mapobj[item]);
      }
      xhr = new XMLHttpRequest;
      // if no below line,response will be 'text'(string)
      xhr.responseType = 'json';
      xhr.ontimeout = 3000; // 3 secs. 
      xhr.onloadend = function(evt) {
        var k, ref1, results, v;
        ref1 = evt.target.response;
        // createAlertBox() included already
        results = [];
        for (k in ref1) {
          v = ref1[k];
          results.push(window.createAlertBox($('#msg'), k + ':' + v));
        }
        return results;
      };
      xhr.open('POST', '');
      xhr.send(fd);
      e.preventDefault();
      return e.stopPropagation();
    });
  });

}).call(this);
