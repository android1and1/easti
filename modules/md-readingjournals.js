// Generated by CoffeeScript 2.1.1
(function() {
  // outter codes access this module,step1:require this;step2 "nohm.register this"!
  var NohmModel, ReadingJournals, pug;

  pug = require('pug');

  NohmModel = (require('nohm')).NohmModel;

  ReadingJournals = (function() {
    class ReadingJournals extends NohmModel {
      
      // below method - mod2snippet is as 'Admin Class'
      static mod2snippet() {
        var form;
        form = 'form.form-horizontal\n- for(attr in opts){\n    .form-group\n      label(for= \'id\' + attr)= attr\n      - var type=opts[attr].type\n      - \n        if(type===\'string\')\n          type=\'text\'\n        else if(type===\'integer\')\n          type=\'number\'\n        else if(type===\'timestamp\')\n          type=\'datetime\'\n        else\n          type=\'unkown\'\n      input(class="form-control",id= \'id\' + attr,name= label,type= type )\n- }\n  .form-group  \n    button(class="btn btn-lg btn-default") Submit!  ';
        return form;
      }

      static getDefinitions() {
        return ReadingJournals.definitions;
      }

    };

    ReadingJournals.version = '1.0';

    ReadingJournals.modelName = 'readingjournals';

    ReadingJournals.idGenerator = 'increment';

    ReadingJournals.definitions = {
      title: {
        type: 'string',
        unique: true,
        validations: [
          'notEmpty',
          {
            'name': 'length',
            options: {
              'min': 4,
              'max': 228
            }
          }
        ]
      },
      visits: {
        type: 'integer',
        index: true,
        defaultValue: 0
      },
      author: {
        type: 'string',
        validations: ['notEmpty']
      },
      tag: {
        type: 'integer',
        defaultValue: 33,
        index: true
      },
      timestamp: {
        type: 'timestamp',
        defaultValue: 0
      },
      journal: {
        type: 'string',
        validations: ['notEmpty']
      },
      reading_history: {
        type: 'string',
        defaultValue: ''
      }
    };

    return ReadingJournals;

  }).call(this);

  module.exports = ReadingJournals;

}).call(this);
