// Generated by CoffeeScript 2.1.1
(function() {
  var express, fs, path, router;

  path = require('path');

  fs = require('fs');

  express = require('express');

  router = express.Router();

  router.get('/show-server-side-accordion-suit', function(req, res, next) {
    return res.render('alpha/show-model-accordion.pug', {
      firstitem: {
        id: 44,
        content: 'you guess',
        about: 'engaing,right?',
        visits: 44
      },
      restitems: [
        {
          id: 23,
          about: 'you guess1',
          content: 'long long ago...',
          visits: 44,
          id: 33,
          about: 'you guess2',
          content: 'long long ago...',
          visits: 44,
          id: 43,
          about: 'you guess3',
          content: 'long long ago...',
          visits: 444
        }
      ]
    });
  });

  router.get('/show-server-side-alert-box', function(req, res, next) {
    // alertStyle:"alert-danger" must be carefully.final,it always become 'alertalert-danger' (no space 
    // between 'alert' and 'alert-danger'). It is client's responsibillity for guarantee keep one space as 'alert' 's postfix.
    return res.render('shows/show-server-side-alert-box', {
      alertContent: "Be Carefull While You Climbing.",
      alertStyle: "alert-danger"
    });
  });

  //res.render 'shows/show-server-side-alert-box'
  router.get('/indexeddb', function(req, res, next) {
    // see safari or firefox window.indexeddb attribute
    return res.render('alpha/indexeddb.pug');
  });

  router.get('/canredirect', function(req, res, next) {
    return res.redirect(302, '/alpha/succ');
  });

  router.get('/ajax-redirect', function(req, res, next) {
    return res.render('alpha/ajax-redirect');
  });

  router.post('/ajax-redirect', function(req, res, next) {
    // client page send an ajax-request to this.
    // server give a json
    // res.json {state:'ok state'} 
    // actually,the ajax-redirect is fake redirect,not via http-headers.
    if (req.body.message === '1') {
      return res.json({
        command: 'redirect',
        state: 'ok'
      });
    } else {
      return res.json({
        state: 'not good!'
      });
    }
  });

  // this route coplay with client-ajax,'json' to client.
  router.post('/server-side-data/:num', function(req, res, next) {
    var pathname;
    pathname = path.join(path.dirname(__dirname), 'share', 'da' + req.params.num + '.json');
    return fs.readFile(pathname, 'utf-8', function(e, da) {
      var msg;
      //if e then res.json JSON.stringify {state:'wrong'} else res.json da
      if (e) {
        msg = 'can not find ' + pathname + ' .';
        return next(msg);
      } else {
        return res.json(da);
      }
    });
  });

  router.get('/succ', function(req, res, next) {
    return res.render('alpha/succ');
  });

  router.get('/*', function(req, res, next) {
    var abs, extname;
    abs = path.join(path.dirname(__dirname), 'views', req.path);
    extname = path.extname(abs);
    if (!fs.existsSync(abs)) {
      return next();
    } else {
      if (extname.toLowerCase() === '.pug') {
        return res.render(req.path.substr(1));
      } else if (extname.toLowerCase() === '.html') {
        return res.sendFile(abs);
      } else {
        console.log(extname);
        return res.send('not clear mime type.');
      }
    }
  });

  module.exports = router;

}).call(this);
