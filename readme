this project easti means east of hailing island,it is belong to GuangDong.YangJiang.
its purpose is do an airbnb like site:provides some holiday-room's info,price,clients can order 1 room,then get transation's info,review.on-line provide password for door-lock,display useful manu of the room.
--- created at 2018-8-8 ,alan dershowitz.

#####################
#####################
  init project
#####################
#####################
git clone 
  git clone tokyo:easti.git(then cd easti)
npm install
  run 'npm install'
*staticify jq and boot
  run "coffee bin/staticify-jq-bt.coffee",under public/ they all created. 
test simple site
  coffee coffees/envCheck.coffee (running at port 8888)


* only the 1st client need run this.


#####################
#####################
  formidable
#####################
#####################
formidable module has very important widget - 'IncomingForm' class.
useage:
form = new formidable.IncomingForm
form.parse req,(err,fileds,files)->
  # fileds
form.on 'file',(name,value)->
  # name is client html page's type="file",name="XXX"
  # value is a File object list,each File can retrieved via:"for file in value"(then,file.name,file.path in the scope) 
form.on 'field',(name,value)->
  # name is as like as client page's "input(type="text" name="XXX"...)"
  # value is field's value,type as client page defined,e.g.Number,String,...


debug level:
if something wrong occurs,follow the oredered list:
1,form action attr?
2,form method?
3,fields has its name?
4,form enctype attr?
5,input(type="file") has multiple attr?
6,server codes include "form.parse()"?
7,server uploadDir setup?
8,jquery xhr constructor set "data-parse"?

######################
######################
  Mac Air Book
######################
######################

its nodejs installed by nodejs.xxx.tar via nodejs.org,64bit version(latest),just choice nodejs lib place,i choiced the //usr/local/node-v8.12.0-darwin-x64/bin/node
and make a link to binary file:
 /usr/local/bin/node -> /usr/local/node-v8.12.0-darwin-x64/bin/node

redis-server as nodejs,from office-site download .tar file,unextract and put its content to favirote place - ' /usr/local/redis-4.0.10'
then make 2 soft links for redis-server and redis-cli.
run server: "redis-server &",note that no need sudo
run client:"redis-cli"
in 'app.js',defines check and lauch redis-server,after http server closing,the redis-server still alive,but in some os(machine),it will close too.why.i have checked the /usr/local/bin/redis-server its attribute,id=root,group=wheel,and other privilage is 'r-x'(can execute).i will see other machines env.
a tip,in client'shell,run "shutdown save" can affect server to close and save key-value before really disconnect.


######################
######################
  redis-server
######################
######################

redis-server commended to be a manually start program,after "apt install",redis-server always be a system-manager,and boot-with program,
there is 1 drawback:user always forget use their customer db file,at <project>/redisdb/easti.dump.rdb,and their customer config file at <project>/redisdb/redis.conf.
so,start redis-server is app's task.in app.js,will find some "spawn" codes about check-start redis-server.
redis-server run from project rootdirectory,run:
redis-server ./redisdb/redis.conf  (redisdb collect all redis-like things together)
redis-server use db filename is ./redisdb/easti.dump.rdb (in .gitignore file,it is be ignores,so each client use itself)

detail infoes read from ./redisdb/readme.


at one situation:the standalone module test (usually in <project>/test directory),http server no running,just module-app imported into the mocha-test-js,so,due to app script's logic,the 'redis-server' no running,we can do this:
"redis-server ./redisdb/redis.conf && mocha <the-test-js>"

OSX platform(Darwin) not like linux platform,its redis-server start with app.js,but after app.js exit,redis-server still alive.
OSX platform:
1) nodejs run child process - redis-server - not immedely return 'close' event,parent process can not know which state it in.
2) redis-server need standlone process which at outter(another shell etc..) shutdown it.

Linux Platform:
1) child process will return 'close' event soon after child process be created(spawn).
2) after app.js exit,redis-server as its child process will exit.

* currently version app.js:
at OSX platform,after 'node app.js' will output some debug error info soon,say connect 127.0.0.1:6379 failure,it is because OSX's subprocess mechemist,redis-server will try severial times,in common situation,it is not a core problem.

#####################
#####################
  nohm model
#####################
#####################

step1,write coffees/md-<nohm-model>.coffee 
step2,compile its result .js file into "./modules/" directory
step3,"md-admin.js" will read this nohm model's definitions,dynamiclly load each attribute for views and other things.

#####################
#####################
  bootstrap-wysiwyg
#####################
#####################

git clone this project,put into './public/,so run 'tree ./public/bootstrap-wysiwyg/' will output:
public/bootstrap-wysiwyg
├── bootstrap-wysiwyg.js
├── external
│   ├── google-code-prettify
│   │   ├── lang-apollo.js
│   │   ├── lang-basic.js
│   │   ├── lang-clj.js
│   │   ├── lang-css.js
│   │   ├── lang-tex.js
│   │   ├── .... 
│   │   ├── lang-vb.js
│   │   ├── lang-vhdl.js
│   │   ├── prettify.css
│   │   ├── prettify.js
│   │   └── run_prettify.js
│   └── jquery.hotkeys.js
├── index.css
├── index.html
├── LICENSE
├── promo-868x350.png
├── README.md
└── republish.sh

step2 ,make it localist:
"mkdir ./public/font-awesome/font -p"
"mkdir ./public/font-awesome/css "
copy net file :
then,run 'tree ./public/font-awesome/' will output
public/font-awesome
└── 3.0.2
    ├── css
    │   ├── font-awesome.css
    │   ├── font-awesome-ie7.min.css
    │   └── font-awesome.min.css
    └── font
        ├── *fontawesome-webfont.eot
        ├── fontawesome-webfont.svg
        ├── *fontawesome-webfont.ttf
        └── *fontawesome-webfont.woff
add  '*' sign means it is not included office site git  resposity,but use 'hacking' from example html's 'resources'(development view).
curl download it ,one by one.
till here,we localize bootstrap-wysiwyg,and font-awesome.

step3)
modified 'index' page for our purpose:disable the AD contents,links..,keep it clean and simple.

step4)
add this suit to our project.
################## 
################## 
  browser
################## 
################## 

create bare repository at tokyo host.
clients get this repository by run "git clone tokyo:easti.git"(prepare your own .git/config)
git clients now only dell laptop.
make .gitignore,readme
make a sketch of express site.



coffee bin/staticify-jq-bt.coffee
it will copy bootstrap and jquery,bootstrap must version 3,because its font support.

//2018年 08月 08日 星期三 19:58:12 CST
init level2,do:
  try do a module-driven route,

//Sat Aug 25 14:44:51 CST 2018
ubuntu16.04LTS upgrade to 18.04.
now the ubuntu18.04LTS-Hp-Desktop-PC joined.

//Sat Aug 25 20:03:28 CST 2018
views/index.pug,normalize ./app.js,run at development mode.
make views/layouts directory.
run test(initial),good.

//Sun Aug 26 18:41:04 CST 2018
initial level 2,target is 'mocha + tdd'

//Wed Aug 29 16:11:52 CST 2018
found what happen 'zombie6.x + mocha',no matter about each one,in fact,after i 'browser.html()' to see all output(it said '404 No Found'), i realized that,the route:'example.com' not correctly,instead it,shouldbe 'http://example.com/' or 'http://example.com',.
now zombie is work well.


affix original codes::
(from accesspageiseasy.coffee)
Browser = require 'zombie'
Browser.localhost 'example.com',3003 
browser = new Browser
# sometimes it will help(below line)
browser.waitDuration = '30s'
describe 'zombie ability display::',->
  describe 'access index page should success::',->
    before ->
      # !!NOT "browser.visit 'example.com'"  !!
      browser.visit 'http://example.com'
    it 'should access page successfully::',->
      browser.assert.success()
      console.log browser.html()
    it 'should has 2 h4 tags::',->
      browser.assert.elements 'h4',2
    it 'page title is "you see you"::',->
      browser.assert.text 'title','you see you' 

//Fri Aug 31 10:23:47 CST 2018
zuo men de shi fu lai J602 xiu men,hao le.
refine the func-test case,add server.close() in after case.
crreate a new alpha router.

	//Fri Aug 31 12:08:08 CST 2018
alpha router is good,but now need more:compress page content.

//Sat Sep  1 11:31:15 CST 2018
be careful of zombie browser.assert.attribute codes.
even html element(s) has no attribue - name,the test will pass,no problem.
if your target is check :
1)elements(e.g. input elements)all have [name=] attrbute;
2)and,[name=] not empty.

actually,there are 2 task not 1,you first check 1) via:
browser.assert.elements 'input[name]',2  # example,your form only 2 input fields
be aware,not 'input' ,it is 'input[name]',to disable no name input field(s).

then,do 2) via:
browser.assert.attribute 'input','name',/\w+/
################## 
################## 
  createForm 
################## 
################## 
in app,always need reused form.the form always from route's module.
currently,resolve this task by defines (a function) in module,then route can invoke it,
"md.getForm();"
then,render to client with {fields:fields},which fields is module's field.
notice that,something in .pug (view),parse field variable,need some tricks,see pugjs.org tuterials about 'interpolation of tag text'.

