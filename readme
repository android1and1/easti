this project easti means east of hailing island,it is belong to GuangDong.YangJiang.
its purpose is do an airbnb like site:provides some holiday-room's info,price,clients can order 1 room,then get transation's info,review.on-line provide password for door-lock,display useful manu of the room.
--- created at 2018-8-8 ,alan dershowitz.

#####################
#####################
  init project
#####################
#####################
git clone 
  git clone tokyo:easti.git(then cd easti)
npm install
  run 'npm install'
*staticify jq and boot
  run "coffee bin/staticify-jq-bt.coffee",under public/ they all created. 
test simple site
  coffee coffees/envCheck.coffee (running at port 8888)


* only the 1st client need run this.


#####################
#####################
  formidable
#####################
#####################
formidable module has very important widget - 'IncomingForm' class.
useage:
form = new formidable.IncomingForm
form.parse req,(err,fileds,files)->
  # fileds
form.on 'file',(name,value)->
  # name is client html page's type="file",name="XXX"
  # value is a File object list,each File can retrieved via:"for file in value"(then,file.name,file.path in the scope) 
form.on 'field',(name,value)->
  # name is as like as client page's "input(type="text" name="XXX"...)"
  # value is field's value,type as client page defined,e.g.Number,String,...


debug level:
if something wrong occurs,follow the oredered list:
1,form action attr?
2,form method?
3,fields has its name?
4,form enctype attr?
5,input(type="file") has multiple attr?
6,server codes include "form.parse()"?
7,server uploadDir setup?
8,jquery xhr constructor set "data-parse"?

###
Mac Air Book
###
its nodejs installed by nodejs.xxx.tar via nodejs.org,64bit version(latest),just choice nodejs lib place,i choiced the //usr/local/node-v8.12.0-darwin-x64/bin/node
and make a link to binary file:
 /usr/local/bin/node -> /usr/local/node-v8.12.0-darwin-x64/bin/node

redis-server as nodejs,from office-site download .tar file,unextract and put its content to favirote place - ' /usr/local/redis-4.0.10'
then make 2 soft links for redis-server and redis-cli.
run server: "redis-server &",note that no need sudo
run client:"redis-cli"
in 'app.js',defines check and lauch redis-server,after http server closing,the redis-server still alive,but in some os(machine),it will close too.why.i have checked the /usr/local/bin/redis-server its attribute,id=root,group=wheel,and other privilage is 'r-x'(can execute).i will see other machines env.
a tip,in client'shell,run "shutdown save" can affect server to close and save key-value before really disconnect.


###
redis-server
###
redis-server commended to be a manually start program,after "apt install",redis-server always be a system-manager,and boot-with program,
there is 1 drawback:user always forget use their customer db file,at <project>/redisdb/easti.dump.rdb,and their customer config file at <project>/redisdb/redis.conf.
so,start redis-server is app's task.in app.js,will find some "spawn" codes about check-start redis-server.
redis-server run from project rootdirectory,run:
redis-server ./redisdb/redis.conf  (redisdb collect all redis-like things together)
redis-server use db filename is ./redisdb/easti.dump.rdb (in .gitignore file,it is be ignores,so each client use itself)

detail infoes read from ./redisdb/readme.


at one situation:the standalone module test (usually in <project>/test directory),http server no running,just module-app imported into the mocha-test-js,so,due to app script's logic,the 'redis-server' no running,we can do this:
"redis-server ./redisdb/redis.conf && mocha <the-test-js>"

OSX platform(Darwin) not like linux platform,its redis-server start with app.js,but after app.js exit,redis-server still alive.
OSX platform:
1) nodejs run child process - redis-server - not immedely return 'close' event,parent process can not know which state it in.
2) redis-server need standlone process which at outter(another shell etc..) shutdown it.

Linux Platform:
1) child process will return 'close' event soon after child process be created(spawn).
2) after app.js exit,redis-server as its child process will exit.

###
nohm model
###
step1,write coffees/md-<nohm-model>.coffee 
step2,compile its result .js file into "./modules/" directory
step3,"md-admin.js" will read this nohm model's definitions,dynamiclly load each attribute for views and other things.
